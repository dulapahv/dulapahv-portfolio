generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider  = "postgresql"
  url       = env("PRISMA_ACCELERATE_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Experience {
  id               String   @id @default(cuid())
  place            Place    @relation(fields: [placeId], references: [id])
  placeId          String
  position         String
  stacks           Stack[]
  description      String
  imagePath        String?
  imageDescription String[]
  startDate        DateTime
  endDate          DateTime
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([placeId, startDate, endDate])
}

model Project {
  id               String   @id @default(cuid())
  title            String   @unique @default(cuid())
  stacks           Stack[]
  description      String   @default("")
  content          String   @default("")
  url              String?
  imagePath        String   @default("")
  imageDescription String[]
  startDate        DateTime
  endDate          DateTime
  place            Place?   @relation(fields: [placeId], references: [id])
  placeId          String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([title, startDate, endDate, placeId])
}

model Blog {
  id          String   @id @default(cuid())
  title       String   @unique @default(cuid())
  stacks      Stack[]
  description String   @default("")
  content     String   @default("")
  imagePath   String   @default("")
  wordCount   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([title, createdAt])
}

model Stack {
  id             String       @id @default(cuid())
  name           String       @unique @default(cuid())
  description    String?
  forceLightIcon Boolean      @default(true)
  featured       Boolean      @default(false)
  tags           Tag[]
  experiences    Experience[]
  projects       Project[]
  blogs          Blog[]

  @@index([name])
}

model Tag {
  id     String  @id @default(cuid())
  name   String  @unique
  stacks Stack[]

  @@index([name])
}

model Education {
  id          String   @id @default(cuid())
  place       Place    @relation(fields: [placeId], references: [id])
  placeId     String
  degree      String   @default("")
  gpa         Float?
  description String?
  startDate   DateTime
  endDate     DateTime

  @@index([placeId, startDate, endDate])
}

model Place {
  id          String       @id @default(cuid())
  name        String       @unique
  city        City         @relation(fields: [cityId], references: [id])
  cityId      String
  icon        String?
  experiences Experience[]
  projects    Project[]
  educations  Education[]

  @@index([name, cityId])
}

model City {
  id        String  @id @default(cuid())
  name      String  @unique
  country   Country @relation(fields: [countryId], references: [id])
  countryId String
  places    Place[]

  @@index([name, countryId])
}

model Country {
  id     String @id @default(cuid())
  name   String @unique
  cities City[]

  @@index([name])
}
